name: 'feature branch mvn deploy snapshot'
on:
  push:
    branches:
      - 'feature/**'
  pull_request:
    branches:
      - develop
      - master
    types:
      - closed

env:
  HEAD_REF: ${{ github.head_ref }}
  BASE_REF: ${{ github.base_ref }}
  REF_NAME: ${{ github.ref_name }}

jobs:
  Feature-Branch-Maven-Deploy-Snapshot:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Show default environment variables
        run: |
          echo "The job_id is: $GITHUB_JOB"   # reference the default environment variables
          echo "The id of this action is: $GITHUB_ACTION"   # reference the default environment variables
          echo "The run id is: $GITHUB_RUN_ID"
          echo "The GitHub Actor's username is: $GITHUB_ACTOR"
          echo "GitHub SHA: $GITHUB_SHA"        

      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: x64
          cache: maven
      - name: mvn clean install
        run: mvn --batch-mode --update-snapshots deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: buildah-build
        id: buildah-build
        uses: redhat-actions/buildah-build@v2
        with:
          image: lego-data-service
          tags: ${{ github.sha }} snapshot latest
          platforms: linux/arm64
          containerfiles: |
            ./kubernetes/Containerfile
      - name: Log in to Quay.io
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ vars.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
          registry: quay.io/tvattima/lego-data-service

      - name: podman-push
        id: podman-push
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.buildah-build.outputs.image }}
          tags: ${{ steps.buildah-build.outputs.tags }}
          registry: quay.io/tvattima

  deploy-to-legolandserver1:
    needs: Feature-Branch-Maven-Deploy-Snapshot
    runs-on: [ self-hosted, Linux, ARM64 ]

    steps:
      - name: Redeploy on Kubernetes cluster
        run: |
          kubectl set image deployment/lego-data-service-deployment lego-data-service-deployment=quay.io/tvattima/lego-data-service:snapshot --namespace=sandbox