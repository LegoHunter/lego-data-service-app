name: 'Build Test Deploy'
on:
  push:
    branches:
      - 'feature/**'
  pull_request:
    branches:
      - develop
      - master
    types:
      - closed

env:
  TAG_NAME: latest
  NAMESPACE: sandbox

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: git checkout
        uses: actions/checkout@v4

      - name: setup java
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
          architecture: x64
          cache: maven

      - name: mvn deploy
        run: mvn --update-snapshots deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: set snapshot tag
        if: ${{ startsWith(github.ref_name, 'feature/') }}
        run: |  
          echo "TAG_NAME=snapshot" >> "$GITHUB_ENV"
          echo "NAMESPACE=snapshot" >> "$GITHUB_ENV"

      - name: set develop tag
        if: ${{ github.ref_name == 'develop' }}
        run: |
          echo "TAG_NAME=develop" >> "$GITHUB_ENV"
          echo "NAMESPACE=dev" >> "$GITHUB_ENV"

      - name: set production tag
        if: ${{ github.ref_name == 'master' }}
        run: |
          echo "TAG_NAME=production" >> "$GITHUB_ENV"
          echo "NAMESPACE=prod" >> "$GITHUB_ENV"

      - name: buildah build
        uses: redhat-actions/buildah-build@v2
        with:
          image: lego-data-service
          tags: "${{ github.sha }} $TAG_NAME"
          platforms: linux/arm64
          containerfiles: |
            ./kubernetes/Containerfile

      - name: podman push
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.buildah-build.outputs.image }}
          tags: ${{ steps.buildah-build.outputs.tags }}
          registry: quay.io/tvattima
          username: ${{ vars.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

  deploy-to-legolandserver1:
    needs: build-test-deploy
    runs-on: [ self-hosted, Linux, ARM64 ]

    steps:
      - name: Redeploy on Kubernetes cluster
        run: |
          kubectl set image deployment/lego-data-service-deployment lego-data-service-deployment=quay.io/tvattima/lego-data-service:$env.TAG_NAME --namespace=$env.NAMESPACE